name: Upgrade NPM packages

# on:
#   workflow_dispatch:
on:
  push:
    branches:
      - 'FEC-13041-upd-dependency-script'

jobs:
  update_package_json:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install jq for JSON processing
        run: sudo apt-get -y install jq

      - name: Check updates Kaltura dependencies
        run: |
          # Read the current package.json content
          CURRENT_CONTENT=$(cat package.json)

          # Check if package.json has playkit-kaltura-cuepoints dependency
          if echo "$CURRENT_CONTENT" | jq -e '.kaltura.dependencies."playkit-kaltura-cuepoints"' >/dev/null 2>&1; then
            # Get the latest version of the package using npm
            PLAYKIT_KALTURA_CUEPOINTS_VERSION=$(npm view @playkit-js/playkit-js-kaltura-cuepoints version)

            # Update the package.json file only if the version has changed
            if [[ $(echo "$CURRENT_CONTENT" | jq -r '.kaltura.dependencies."playkit-kaltura-cuepoints"') != "$PLAYKIT_KALTURA_CUEPOINTS_VERSION" ]]; then
              UPDATED_CONTENT=$(echo "$CURRENT_CONTENT" | jq '.kaltura.dependencies."playkit-kaltura-cuepoints" = "'"$PLAYKIT_KALTURA_CUEPOINTS_VERSION"'"')
              echo "$UPDATED_CONTENT" > package.json.tmp
              mv package.json.tmp package.json
              echo "COMMIT_REQUIRED=true" >> $GITHUB_ENV
            fi
          fi

          # Check if package.json has playkit-timeline dependency
          if echo "$CURRENT_CONTENT" | jq -e '.kaltura.dependencies."playkit-timeline"' >/dev/null 2>&1; then
            # Get the latest version of the package using npm
            PLAYKIT_TIMELINE_VERSION=$(npm view @playkit-js/playkit-js-timeline version)

            # Update the package.json file only if the version has changed
            if [[ $(echo "$CURRENT_CONTENT" | jq -r '.kaltura.dependencies."playkit-timeline"') != "$PLAYKIT_TIMELINE_VERSION" ]]; then
              UPDATED_CONTENT=$(echo "$CURRENT_CONTENT" | jq '.kaltura.dependencies."playkit-timeline" = "'"$PLAYKIT_TIMELINE_VERSION"'"')
              echo "$UPDATED_CONTENT" > package.json.tmp
              mv package.json.tmp package.json
              echo "COMMIT_REQUIRED=true" >> $GITHUB_ENV
            fi
          fi

          # Check if package.json has playkit-ui-managers dependency
          if echo "$CURRENT_CONTENT" | jq -e '.kaltura.dependencies."playkit-ui-managers"' >/dev/null 2>&1; then
            # Get the latest version of the package using npm
            PLAYKIT_UI_MANAGERS_VERSION=$(npm view @playkit-js/ui-managers version)

            # Update the package.json file only if the version has changed
            if [[ $(echo "$CURRENT_CONTENT" | jq -r '.kaltura.dependencies."playkit-ui-managers"') != "$PLAYKIT_UI_MANAGERS_VERSION" ]]; then
              UPDATED_CONTENT=$(echo "$CURRENT_CONTENT" | jq '.kaltura.dependencies."playkit-ui-managers" = "'"$PLAYKIT_UI_MANAGERS_VERSION"'"')
              echo "$UPDATED_CONTENT" > package.json.tmp
              mv package.json.tmp package.json
              echo "COMMIT_REQUIRED=true" >> $GITHUB_ENV
            fi
          fi

          # Print the updated package.json content
          cat package.json

      - name: Commit changes
        if: env.COMMIT_REQUIRED == 'true'
        uses: peter-evans/create-pull-request@v3
        with:
          title: 'build(deps): Upgrade NPM packages (automated)'
          delete-branch: true
          branch: 'upgrade-npm-packages-automated'
          commit-message: 'build(deps): upgrade NPM packages (automated)'
