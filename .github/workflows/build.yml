name: Build dist and push to S3 bucket

on:
  workflow_dispatch:

#A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    environment: build-plugins
    runs-on: ubuntu-latest
    steps:
      - name: set local params
        id: local
        run: |
           echo "::set-output name=fileNamePrefix::playkit-info"
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 'v14.20.0'
      - name: npm install
        run: |
          npm install
      - name: versioning
        run: |
          echo "Run standard-version"
          yarn run release --prerelease canary --skip.commit=true --skip.tag=true
          sha=$(git rev-parse --verify --short HEAD)
          echo "Current sha ${sha}"
          commitNumberAfterTag=$(git rev-list  `git rev-list --tags --no-walk --max-count=1`..HEAD --count)
          echo "Number of commit from last tag ${commitNumberAfterTag}"
          currentVersion=$(npx -c 'echo "$npm_package_version"')
          echo "Current version ${currentVersion}"
          newVersion=$(echo $currentVersion | sed -e "s/canary\.[[:digit:]]/canary.${commitNumberAfterTag}-${sha}/g")
          echo "New version ${newVersion}"
          echo ${newVersion} > VERSION.txt
          sed -iE "s/$currentVersion/$newVersion/g" package.json
          sed -iE "s/$currentVersion/$newVersion/g" CHANGELOG.md
      - name: build 
        run: npm run build
      - name: push to S3
        id: s3
        run: |
          echo "deployment path:" "${{ github.event.repository.name }}/$(cat VERSION.txt)"
          export filePath="${{ github.event.repository.name }}/$(cat VERSION.txt)"
          echo "$filePath"
          echo "::set-output name=filePath::$filePath"
          echo "::set-output name=jsFilePath::dist/${{ steps.local.outputs.fileNamePrefix }}.js"
          echo "::set-output name=mapFilePath::dist/${{ steps.local.outputs.fileNamePrefix }}.js.map"
      - uses: aws-actions/configure-aws-credentials@v1
        name: Configure AWS credentials
        with:
          aws-access-key-id: ${{ secrets.ACCESS }}
          aws-secret-access-key: ${{ secrets.ACCESS_SECRET }}
          aws-region: 'us-east-1'
      - name: Deploy
        run: |
          export DESTINATION="s3://"${{ secrets.BUCKET }}"/"${{ steps.s3.outputs.filePath }}
          echo $DESTINATION
          aws s3 sync ./dist $DESTINATION
